name: hf-sync

on:
  release:
    types: [published]     # auto-run when you publish a GitHub Release
  workflow_dispatch:        # allow manual runs

concurrency: hf-sync-${{ github.ref }}
permissions:
  contents: read

jobs:
  sync:
    runs-on: ubuntu-latest
    env:
      HF_REPO_ID: "idiakhoas/protocolpilot"   # <-- your HF dataset name
      HF_REPO_TYPE: "dataset"
      HF_TOKEN: ${{ secrets.HF_TOKEN }}
      UPLOAD_PATH: "."                        # upload the repo root

    steps:
      - name: Fail if missing secret
        if: env.HF_TOKEN == ''
        run: |
          echo "::error::HF_TOKEN secret is not configured"; exit 1

      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.release.tag_name || github.ref }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install -U pip wheel
          pip install huggingface_hub

      - name: Upload to Hugging Face
        run: |
          python - << 'PY'
          import os
          from huggingface_hub import HfApi
          api = HfApi(token=os.environ["HF_TOKEN"])
          api.create_repo(repo_id=os.environ["HF_REPO_ID"],
                          repo_type=os.environ.get("HF_REPO_TYPE","dataset"),
                          exist_ok=True)
          api.upload_folder(
              repo_id=os.environ["HF_REPO_ID"],
              repo_type=os.environ.get("HF_REPO_TYPE","dataset"),
              folder_path=os.environ.get("UPLOAD_PATH","."),
              path_in_repo="",
              commit_message=f"Sync {os.environ.get('GITHUB_REF_NAME','manual')}",
              ignore_patterns=[
                ".git/*",".github/*","**/__pycache__/*",".pytest_cache/*",".mypy_cache/*",
                ".venv/*","venv/*","*.egg-info/*","dist/*","build/*","*.zip",".DS_Store"
              ],
          )
          print("âœ… Upload complete.")
          PY
