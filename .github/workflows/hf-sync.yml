name: hf-sync
on:
  release:
    types: [published]       # runs when you publish a GitHub Release
  workflow_dispatch:         # allow manual run

jobs:
  sync:
    # If you set up a self-hosted Windows runner, use the next line; otherwise use "runs-on: ubuntu-latest"
    runs-on: [self-hosted, Windows]
    env:
      HF_TOKEN: ${{ secrets.HF_TOKEN }}
      HF_REPO_ID: "idiakhoas/protocolpilot"   # <-- your HF dataset path
      HF_REPO_TYPE: "dataset"
    steps:
      - name: Checkout the released tag
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.release.tag_name || github.ref }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install HF client
        run: |
          python -m pip install -U pip wheel
          pip install huggingface_hub

      - name: Upload repo to HF (ignore CI/temp files)
        shell: pwsh
        run: |
          python - << 'PY'
          import os
          from huggingface_hub import HfApi
          api = HfApi(token=os.environ["HF_TOKEN"])
          repo_id   = os.environ["HF_REPO_ID"]
          repo_type = os.environ["HF_REPO_TYPE"]
          api.create_repo(repo_id=repo_id, repo_type=repo_type, exist_ok=True)
          api.upload_folder(
              repo_id=repo_id,
              repo_type=repo_type,
              folder_path=".",
              path_in_repo="",
              commit_message=f"Sync {os.environ.get('GITHUB_REF_NAME','manual')}",
              ignore_patterns=[".git/*", ".github/*", ".venv/*", "venv/*", "__pycache__/*", "*.zip", "*.tar.gz", ".DS_Store"]
          )
          PY
